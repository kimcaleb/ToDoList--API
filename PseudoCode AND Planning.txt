1. Create and Establish Server
	Create server.js file.
	Create Public, Controllers, Routers, db, models directories
	git init and push to repo on Github
	Install all dependencies - express,morgan,mongoose,dotenv
	create .gitignore, .env files
	store sensitive info on .env
	Create database - todolists.
2. On server.js file
	create variables
	import relevant modules - dotenv, express, path, db
	config middleware - json parser, static paths, logger(morgan)
	configure app.listen()
	configure routes - model
	
3. Configure database
	create index.js file in db directory.
	inside index.js, import mongoose module
	do mongoose.connetct(URL, newURLParse Obect, Function)
	export mongoose variable to server.js file. 
	Inside server.js file, require in that mongoose object. 

4. Create your database model - todolists
	Create todoList.js file in models folder
		Inside, require just mongoose module
		Create collection schema: var = new mongoose.Schema({schema}, {timestamps:true});
		Create model: var = mongoose.model("NameOfSchema", todolistSchema object)
		export model object. 
5. Create controller - todolist
	create todolist.js file in controller folder
		Inside, create your methods for your RESTFUL API routes.Remember, for the update method, you need to pass in the extra argument: {new:true}
		Stores these methods with their var name in an object and export that export. 
		
6. Create router - todoList
	create routerCollectionName.js file
		Inside, import express module then create Router object with it. express.Router()
		create the rounter.get(), etc functions. 
		Export router object. 
7. Back in server.js import router module. Establish router: app.use("/api/collectionName", router);